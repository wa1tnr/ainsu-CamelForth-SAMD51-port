
2740 00005080 <aart>:
2741     forth_ascii();
2742     5080:       4b00            ldr     r3, [pc, #0]    ; (5084 <aart+0x4>)
2743     5082:       4718            bx      r3
2744     5084:       00005309        .word   0x00005309
2745 
2746 00005088 <dott>:
2747     dot();
2748     5088:       4b00            ldr     r3, [pc, #0]    ; (508c <dott+0x4>)
2749     508a:       4718            bx      r3
2750     508c:       00004e15        .word   0x00004e15

4b00 means load register 3 with program counter #0
4718 means branch and execute what was loaded into register 3
5309 is the address to branch to and execute (the aart word)

Dump:
                      vvvvvvvvvvv
$00005080 00 4B 18 47 09 53 00 00  00 4B 18 47 15 4E 00 00    .K.G.S...K.G.N..
          ~~~~~ ~~~~~ ~~~~~ ~~~~~  sssss sssss sssss sssss

The 00 in '4b00' is probably that #0.  Look at other ldr instrux
to see if that pattern fits well.

The four bytes 09 53 00 00 are probably considered as one unit,
and that may mean all four bytes could be used (that the final
two 00 pairs aren't just placeholders for aligned memory addresses,
but are actively a part of the branch address -- unknown by me
as to which it might be).


Sun Sep  2 22:04:23 UTC 2018
